<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /root/round_bot_harmonic_ws/round_bot/description/round_bot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="round_bot">
  <!-- <xacro:macro name="inertial_box" params="mass x y z *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (y*y+z*z)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * mass * (x*x+z*z)}" iyz="0.0"
                    izz="${(1/12) * mass * (x*x+y*y)}" />
        </inertial>
    </xacro:macro> -->
  <link name="base_footprint"/>
  <joint name="chassis_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="chassis"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
  </joint>
  <link name="chassis">
    <visual>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.12"/>
      <geometry>
        <cylinder length="0.1" radius="0.25"/>
      </geometry>
      <material name="Orange">
        <color rgba="1.0 0.3 0.1 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.12"/>
      <geometry>
        <cylinder length="0.1" radius="0.25"/>
      </geometry>
      <contact_coefficients kd="1.0" kp="1e+13.0" mu1="1" mu2="1"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.12"/>
      <mass value="2"/>
      <inertia ixx="0.032916666666666664" ixy="0.0" ixz="0.0" iyy="0.032916666666666664" iyz="0.0" izz="0.0625"/>
    </inertial>
  </link>
  <gazebo reference="chassis">
    <material>Gazebo/Orange</material>
  </gazebo>
  <joint name="left_wheel_joint" type="continuous">
    <parent link="chassis"/>
    <child link="left_wheel"/>
    <axis xyz="0 0 1.0"/>
    <origin rpy="-1.57 0.0 0.0" xyz="0.0 0.18 0.075"/>
  </joint>
  <link name="left_wheel">
    <visual>
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.08"/>
      </geometry>
      <contact_coefficients kd="1.0" kp="1000.0" mu1="0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.75"/>
      <inertia ixx="0.0013562499999999998" ixy="0.0" ixz="0.0" iyy="0.0013562499999999998" iyz="0.0" izz="0.0024000000000000002"/>
    </inertial>
  </link>
  <gazebo reference="left_wheel">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="right_wheel_joint" type="continuous">
    <parent link="chassis"/>
    <child link="right_wheel"/>
    <axis xyz="0.0 0.0 1.0"/>
    <origin rpy="-1.57 0.0 0.0" xyz="0.0 -0.18 0.075"/>
  </joint>
  <link name="right_wheel">
    <visual>
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.08"/>
      </geometry>
      <contact_coefficients kd="1.0" kp="1000.0" mu="0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.75"/>
      <inertia ixx="0.0013562499999999998" ixy="0.0" ixz="0.0" iyy="0.0013562499999999998" iyz="0.0" izz="0.0024000000000000002"/>
    </inertial>
  </link>
  <gazebo reference="right_wheel">
    <slip1 value="0.5"/>
    <slip2 value="0.5"/>
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="front_caster_joint" type="fixed">
    <parent link="chassis"/>
    <child link="front_caster_link"/>
    <origin rpy="0 0 0" xyz="0.18 0.0 0.0452"/>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </joint>
  <link name="front_caster_link">
    <visual>
      <geometry>
        <!-- <sphere radius="0.05"/> -->
        <sphere radius="0.05"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <contact_coefficients kd="1.0" kp="1000.0" mu="0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.75"/>
      <inertia ixx="0.0007500000000000002" ixy="0.0" ixz="0.0" iyy="0.0007500000000000002" iyz="0.0" izz="0.0007500000000000002"/>
    </inertial>
  </link>
  <gazebo reference="front_caster_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="back_caster_joint" type="fixed">
    <parent link="chassis"/>
    <child link="back_caster_link"/>
    <origin rpy="0 0 0" xyz="-0.18 0.0 0.0452"/>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </joint>
  <link name="back_caster_link">
    <visual>
      <geometry>
        <!-- <sphere radius="0.05"/> -->
        <sphere radius="0.05"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <contact_coefficients kd="1.0" kp="1000.0" mu="0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.75"/>
      <inertia ixx="0.0007500000000000002" ixy="0.0" ixz="0.0" iyy="0.0007500000000000002" iyz="0.0" izz="0.0007500000000000002"/>
    </inertial>
  </link>
  <gazebo reference="back_caster_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="mount_joint" type="fixed">
    <parent link="chassis"/>
    <child link="mount_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.15 0.0 0.18"/>
  </joint>
  <link name="mount_link">
    <visual>
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder length="0.04" radius="0.04"/>
      </geometry>
      <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.04"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="5.3333333333333326e-05" ixy="0.0" ixz="0.0" iyy="5.3333333333333326e-05" iyz="0.0" izz="8e-05"/>
    </inertial>
  </link>
  <gazebo reference="mount_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.010 0.05 0.05"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
  </link>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.25 0.0 0.125"/>
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>
  <joint name="camera_optical_joint" type="fixed">
    <origin rpy="-1.57 0.0 -1.57" xyz="0.0 0.0 0.0"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>
  <link name="camera_link_optical">
      
  </link>
  <!-- camera -->
  <gazebo reference="camera_link">
    <material> Gazebo/Blue</material>
    <sensor name="depth_camera" type="depth">
      <update_rate>50.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
          <!-- <format>B8G8R8</format> -->
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <!-- <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <frameName>camera_link_optical</frameName>
        <min_depth>0.1</min_depth>
        <max_depth>100.0</max_depth>
        <cameraName>head</cameraName>
        <imageTopicName>/camera/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
      </plugin> -->
      <topic>camera/image_raw</topic>
      <gz_frame_id>camera_link_optical</gz_frame_id>
    </sensor>
  </gazebo>
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.07"/>
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.07"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.0002908333333333334" ixy="0.0" ixz="0.0" iyy="0.0002908333333333334" iyz="0.0" izz="0.0005000000000000001"/>
    </inertial>
  </link>
  <joint name="lidar_joint" type="fixed">
    <origin rpy="0 0.0 0.0" xyz="0.0 0 0.03"/>
    <parent link="mount_link"/>
    <child link="lidar_link"/>
  </joint>
  <gazebo reference="lidar_link">
    <material> Gazebo/Red</material>
    <sensor name="block_laser_sensor" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>50.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>2.5</max>
          <resolution>0.1</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!-- <plugin name="gazebo_ros_block_laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin> -->
      <topic>scan</topic>
      <gz_frame_id>lidar_link</gz_frame_id>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <update_rate>50</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.36</wheel_separation>
      <wheel_radius>0.08</wheel_radius>
      <max_wheel_torque>10</max_wheel_torque>
      <max_linear_acceleration>0.50</max_linear_acceleration>
      <frame_id>odom</frame_id>
      <child_frame_id>base_footprint</child_frame_id>
      <odom_topic>odom</odom_topic>
      <odom_publisher_frequency>30</odom_publisher_frequency>
      <tf_topic>/tf</tf_topic>
      <topic>cmd_vel</topic>
    </plugin>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
      <topic>joint_states</topic>
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>right_wheel_joint</joint_name>
    </plugin>
  </gazebo>
  <!-- <joint name="arm_base_joint" type="fixed">
    <parent link="chassis"/>
    <child link="arm_base"/>
    <origin xyz="0.0 0.0 0.18" rpy="0.0 0.0 0.0"/>
  </joint>
  
  <link name="arm_base">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <cylinder radius="0.1" length="0.015"/>
      </geometry>
      <material name ="Orange">
        <color rgba = "1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <cylinder radius="0.1" length="0.015"/>
      </geometry>
      <contact_coefficients mu1 = "1" mu2 = "1" kp = "1e+13.0" kd = "1.0"/>
    </collision>
    <xacro:inertial_chassis_cylinder chassis_mass="${chassis_mass}" chassis_length="${chassis_length}" chassis_radius="${chassis_radius}">
      <origin xyz="0 0 0.12" rpy="0 0 0"/>
    </xacro:inertial_chassis_cylinder>
  </link> -->
</robot>

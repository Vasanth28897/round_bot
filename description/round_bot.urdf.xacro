<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rount_bot">

<xacro:include filename="$(find round_bot)/description/inertial_xacros.xacro"/>

  <link name="base_footprint">
      
  </link>
  
  <joint name="base_link_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
  </joint>
  
  <link name="base_link">
    <visual>
      <origin xyz="0.0 0.0 0.12" rpy="0.0 0.0 0.0"/>
      <geometry>
        <!-- <cylinder radius="0.35" length="0.1"/> -->
        <cylinder radius="${chassis_radius}" length="${chassis_length}"/>
      </geometry>
      <material name ="Orange">
        <color rgba = "1.0 0.3 0.1 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.12" rpy="0.0 0.0 0.0"/>
      <geometry>
          <!-- <sphere radius="0.0"/> -->
          <cylinder radius="${chassis_radius}" length="${chassis_length}"/>
          <!-- <contact_coefficients mu = "1" kp = "1e+13" kd = "1.0"/> -->
      </geometry>
    </collision>
    <xacro:inertial_chassis_cylinder chassis_mass="${chassis_mass}" chassis_length="${chassis_length}" chassis_radius="${chassis_radius}">
      <origin xyz="0 0 0.12" rpy="0 0 0"/>
    </xacro:inertial_chassis_cylinder>
  </link>

  <gazebo reference = "base_link">
    <material>Gazebo/Orange </material>
  </gazebo>

  <gazebo reference = "front_caster_link">
    <material>Gazebo/Red</material>
  </gazebo> 

  <joint name="front_caster_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_caster_link"/>
    <origin xyz="0.0 -0.25 0.04" rpy="0 0 0"/>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </joint>

  <link name="back_caster_link">
    <visual>                     
      <geometry>
        <!-- <sphere radius="0.05"/> -->
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>

    <xacro:inertial_sphere caster_mass="${caster_mass}" caster_radius="${caster_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_sphere>
  </link> 

  <gazebo reference = "back_caster_link">
    <material>Gazebo/Red</material>
  </gazebo> 

  <joint name="back_caster_joint" type="continuous">
    <parent link="base_link"/>
    <child link="back_caster_link"/>
    <origin xyz="0.0 0.25 0.04" rpy="0 0 0"/>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </joint>

  <link name="front_caster_link">
    <visual>                     
      <geometry>
        <!-- <sphere radius="0.05"/> -->
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>

    <xacro:inertial_sphere caster_mass="${caster_mass}" caster_radius="${caster_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_sphere>
  </link> 

  <link name="left_wheel">
    <visual>
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
      </geometry>
      <material name = "Red">
        <color rgba = "1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}"/>
        <contact_coefficients mu = "1" kp = "1e+13" kd = "1.0"/>
      </geometry>
    </collision>
    <xacro:inertial_wheel_cylinder wheel_mass="${wheel_mass}" wheel_length="${wheel_length}" wheel_radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_wheel_cylinder>
  </link>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <axis xyz="0 0 1.0"/>
    <origin xyz="0.25 0 0.075" rpy="1.57 0 1.57"/>
  </joint>

  <gazebo reference = "left_wheel">
    <material>Gazebo/Red</material>
  </gazebo> 

  <link name="right_wheel">
    <visual>
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
      </geometry>
      <material name = "Red">
        <color rgba = "1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}"/>
        <contact_coefficients mu = "1" kp = "1e+13" kd = "1.0"/>
      </geometry>
    </collision>
    <xacro:inertial_wheel_cylinder wheel_mass="${wheel_mass}" wheel_length="${wheel_length}" wheel_radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_wheel_cylinder>
  </link>

  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <axis xyz="0 0 1.0"/>
    <origin xyz="-0.25 0 0.075" rpy="1.57 0 1.57"/>
  </joint>

  <gazebo reference = "right_wheel">
    <material>Gazebo/Red</material>
  </gazebo> 

  <link name="mount_link">
    <visual>                     
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder radius="${mount_radius}" length="${mount_length}"/>
      </geometry>
      <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${mount_radius}" length="${mount_length}"/>
      </geometry>
    </collision>
    <xacro:inertial_mount_cylinder mount_mass="${mount_mass}" mount_length="${mount_length}" mount_radius="${mount_radius}"> 
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_mount_cylinder>
  </link> 

  <gazebo reference = "mount_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <joint name="mount_joint" type="fixed">
    <parent link="base_link"/>
    <child link="mount_link"/>
    <origin xyz="0.0 -0.2 0.2" rpy="0.0 0.0 0.0"/>
  </joint>

  <link name="camera_link">
    <visual>  
      <geometry>
        <box size="0.010 0.05 0.05"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="0.0 -0.35 0.125" rpy="0 0 -1.57"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

  <joint name="camera_optical_joint" type="fixed">
    <origin xyz="0.0 0.0 0.0" rpy="-1.57 0.0 -1.57"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>

  <link name="camera_link_optical">
      
  </link>

  <!-- camera -->
  <gazebo reference="camera_link">
    <material> Gazebo/Blue</material>
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <!-- <alwaysOn>true</alwaysOn> -->
        <frameName>camera_link_optical</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_length}"/>
        <!-- <mesh filename="package://round_bot/meshes/lds.stl" scale="0.001 0.001 0.001"/> -->
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_length}"/>
        <!-- <mesh filename="package://round_bot/meshes/lds.stl" scale="0.001 0.001 0.001"/> -->
      </geometry>
    </collision>
    <xacro:inertial_lidar_cylinder lidar_mass="0.1" lidar_length="0.07" lidar_radius="0.1"> 
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_lidar_cylinder>
  </link>

  <joint name="lidar_joint" type="fixed">
    <origin xyz="0.0 0 0.05" rpy="0 0.0 0.0"/>
    <parent link="mount_link"/>
    <child link="lidar_link"/>
  </joint>

  <gazebo reference="lidar_link">
    <material> Gazebo/Red</material>
      <sensor name="gazebo_lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>30.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
            <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <transmission name="left_wheel_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <transmission name="right_wheel_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <ros2_control name="GazeboSystem" type="system">
    <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity"/>
      <state_interface name="position"/>
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity"/>
      <state_interface name="position"/>
    </joint>
  </ros2_control>

  <gazebo>
      <plugin name = "gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <parameters>$(find round_bot)/config/control.yaml</parameters>
        <!-- <robotNamespace></robotNamespace> -->
      </plugin>
  </gazebo>
    
</robot>
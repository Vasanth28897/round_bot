<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="round_bot">

  <xacro:include filename="$(find round_bot)/description/inertial_xacros.xacro"/>
  
  <link name="base_footprint"/> 
  
  <joint name="chassis_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="chassis"/>
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
  </joint>
  
  <link name="chassis">
    <visual>
      <origin xyz="0.0 0.0 0.12" rpy="0.0 0.0 0.0"/>
      <geometry>
        <cylinder radius="${chassis_radius}" length="${chassis_length}"/>
      </geometry>
      <material name ="Orange">
        <color rgba = "1.0 0.3 0.1 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.12" rpy="0.0 0.0 0.0"/>
      <geometry>
        <cylinder radius="${chassis_radius}" length="${chassis_length}"/>
      </geometry>
      <contact_coefficients mu1 = "1" mu2 = "1" kp = "1e+13.0" kd = "1.0"/>
    </collision>
    <xacro:inertial_chassis_cylinder chassis_mass="${chassis_mass}" chassis_length="${chassis_length}" chassis_radius="${chassis_radius}">
      <origin xyz="0 0 0.12" rpy="0 0 0"/>
    </xacro:inertial_chassis_cylinder>
  </link>

  <gazebo reference = "chassis">
    <material>Gazebo/Orange</material>
  </gazebo>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="chassis"/>
    <child link="left_wheel"/>
    <axis xyz="0 0 1.0"/>
    <origin xyz="0.0 0.18 0.075" rpy="-1.57 0.0 0.0"/>
  </joint>

  <link name="left_wheel">
    <visual>
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
      </geometry>
      <material name = "Red">
        <color rgba = "1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
      <contact_coefficients mu1 = "0" kp = "1000.0" kd = "1.0"/>
    </collision>
    <xacro:inertial_wheel_cylinder wheel_mass="${wheel_mass}" wheel_length="${wheel_length}" wheel_radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_wheel_cylinder>
  </link>

  <gazebo reference = "left_wheel">
    <material>Gazebo/Red</material>
  </gazebo> 

  <joint name="right_wheel_joint" type="continuous">
    <parent link="chassis"/>
    <child link="right_wheel"/>
    <axis xyz="0.0 0.0 1.0"/>
    <origin xyz="0.0 -0.18 0.075" rpy="-1.57 0.0 0.0"/>
  </joint>

  <link name="right_wheel">
    <visual>
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
      </geometry>
      <material name = "Red">
        <color rgba = "1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
      <contact_coefficients mu = "0" kp = "1000.0" kd = "1.0"/>
    </collision>
    <xacro:inertial_wheel_cylinder wheel_mass="${wheel_mass}" wheel_length="${wheel_length}" wheel_radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_wheel_cylinder>
  </link>

  <gazebo reference = "right_wheel">
    <slip1 value="0.5" />
    <slip2 value="0.5" />
    <material>Gazebo/Red</material>
  </gazebo> 

  <joint name="front_caster_joint" type="fixed">
    <parent link="chassis"/>
    <child link="front_caster_link"/>
    <origin xyz="0.18 0.0 0.0452" rpy="0 0 0"/>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </joint>

  <link name="front_caster_link">
    <visual>                     
      <geometry>
        <!-- <sphere radius="0.05"/> -->
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <contact_coefficients mu="0" kp="1000.0" kd="1.0"/>
    </collision>

    <xacro:inertial_sphere caster_mass="${caster_mass}" caster_radius="${caster_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_sphere>
  </link> 

  <gazebo reference = "front_caster_link">
    <material>Gazebo/Red</material>
  </gazebo> 

  <joint name="back_caster_joint" type="fixed">
    <parent link="chassis"/>
    <child link="back_caster_link"/>
    <origin xyz="-0.18 0.0 0.0452" rpy="0 0 0"/>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </joint>

  <link name="back_caster_link">
    <visual>                     
      <geometry>
        <!-- <sphere radius="0.05"/> -->
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <contact_coefficients mu="0" kp="1000.0" kd="1.0"/>
    </collision>

    <xacro:inertial_sphere caster_mass="${caster_mass}" caster_radius="${caster_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_sphere>
  </link> 

  <gazebo reference = "back_caster_link">
    <material>Gazebo/Red</material>
  </gazebo> 

  <joint name="mount_joint" type="fixed">
    <parent link="chassis"/>
    <child link="mount_link"/>
    <origin xyz="0.15 0.0 0.18" rpy="0.0 0.0 0.0"/>
  </joint>

  <link name="mount_link">
    <visual>                     
      <geometry>
        <!-- <cylinder radius="0.08" length="0.05"/> -->
        <cylinder radius="${mount_radius}" length="${mount_length}"/>
      </geometry>
      <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${mount_radius}" length="${mount_length}"/>
      </geometry>
    </collision>
    <xacro:inertial_mount_cylinder mount_mass="${mount_mass}" mount_length="${mount_length}" mount_radius="${mount_radius}"> 
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_mount_cylinder>
  </link> 

  <gazebo reference = "mount_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <link name="camera_link">
    <visual>  
      <geometry>
        <box size="0.010 0.05 0.05"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="0.25 0.0 0.125" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>

  <joint name="camera_optical_joint" type="fixed">
    <origin xyz="0.0 0.0 0.0" rpy="-1.57 0.0 -1.57"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>

  <link name="camera_link_optical">
      
  </link>

  <!-- camera -->
  <gazebo reference="camera_link">
    <material> Gazebo/Blue</material>
    <sensor type="camera" name="camera">
      <update_rate>50.0</update_rate>
      <camera name="head">
        <camera_info_topic>camera/camera_info</camera_info_topic>
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
            <!-- <format>B8G8R8</format> -->
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
      </camera>
      <!-- <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <frameName>camera_link_optical</frameName>
        <min_depth>0.1</min_depth>
        <max_depth>100.0</max_depth>
        <cameraName>head</cameraName>
        <imageTopicName>/camera/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
      </plugin> -->
      <topic>camera/image_raw</topic>
      <gz_frame_id>camera_link_optical</gz_frame_id>
    </sensor>
  </gazebo>

  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_length}"/>
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_length}"/>
      </geometry>
    </collision>
    <xacro:inertial_lidar_cylinder lidar_mass="0.1" lidar_length="0.07" lidar_radius="0.1"> 
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_lidar_cylinder>
  </link>

  <joint name="lidar_joint" type="fixed">
    <origin xyz="0.0 0 0.03" rpy="0 0.0 0.0"/>
    <parent link="mount_link"/>
    <child link="lidar_link"/>
  </joint>

  <gazebo reference="lidar_link">
    <material> Gazebo/Red</material>
      <sensor name="block_laser_sensor" type="gpu_lidar">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10.0</update_rate>
      <lidar>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>7.5</max>
          <resolution>0.1</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </lidar>
      <!-- <plugin name="gazebo_ros_block_laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin> -->
      <topic>scan</topic>
      <gz_frame_id>lidar_link</gz_frame_id>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name='gz::sim::systems::DiffDrive' filename='gz-sim-diff-drive-system'>
      <update_rate>50</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.36</wheel_separation>
      <wheel_radius>0.08</wheel_radius>
      <max_wheel_torque>10</max_wheel_torque>
      <max_linear_acceleration>10.0</max_linear_acceleration>
      <max_angular_acceleration>3.0</max_angular_acceleration>
      <frame_id>odom</frame_id>
      <child_frame_id>base_footprint</child_frame_id>
      <odom_topic>odom</odom_topic>
      <odom_publisher_frequency>150</odom_publisher_frequency>
      <tf_topic>/tf</tf_topic>
      <topic>cmd_vel</topic>
    </plugin>

    <plugin filename="gz-sim-joint-state-publisher-system"
      name="gz::sim::systems::JointStatePublisher">
      <topic>joint_states</topic>
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>right_wheel_joint</joint_name>
    </plugin>
  </gazebo> 

</robot>